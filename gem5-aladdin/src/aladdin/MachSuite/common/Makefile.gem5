# Common Make targets for simulating MachSuite in gem5.
#
# ALADDIN_HOME needs to be defined as an environment variable.
# The gem5 dependencies are listed as .cpp files for compatibility with gem5.
# To compile them with C code, we need to explicitly use gcc.

.PHONY: all gem5 gem5-cpu gem5-accel clean-gem5

GEM5_SRCS = aladdin_sys_connection.cpp aladdin_sys_constants.cpp dma_interface.c
GEM5_FULL_SRCS = $(GEM5_SRCS:%=$(ALADDIN_HOME)/gem5/%)

# For the MachSuite harness and support system.
CFLAGS = -O3 -Wall -Wno-unused-label -I../../common -I$(ALADDIN_HOME) -DDMA_INTERFACE_V3 -DDMA_MODE
ALL_SRCS = $(SRCS) ../../common/harness.c

GEM5_CFLAGS = -static -O3

INCLUDES += -I$(ALADDIN_HOME)
LFLAGS = -lm
BMARK = $(ACCEL_NAME)

all: gem5

# Builds both standalone CPU version and the HW accelerated version.
gem5: gem5-cpu gem5-accel

# Builds the standalone CPU version only.
gem5-cpu:
	@$(MAKE) -C . bench-gem5

# Builds the gem5 version with HW acceleration turned on.
gem5-accel:
	@$(MAKE) -C . bench-gem5-accel

bench-gem5: $(ALL_SRCS) $(GEM5_FULL_SRCS)
	@echo Building benchmark $(BMARK) for gem5.
	@$(CC) $(GEM5_CFLAGS) $(CFLAGS) $(GEM5_FULL_SRCS) $(ALL_SRCS) $(INCLUDES) -o $(BMARK)-gem5 $(LFLAGS)

bench-gem5-accel: $(ALL_SRCS) $(GEM5_FULL_SRCS)
	@echo Building benchmark $(BMARK) for gem5 with HW acceleration.
	@$(CC) $(GEM5_CFLAGS) $(CFLAGS) -DGEM5_HARNESS $(ALL_SRCS) $(GEM5_FULL_SRCS) $(INCLUDES) -o $(BMARK)-gem5-accel $(LFLAGS)

clean-gem5:
	rm -rf $(BMARK)-gem5 $(BMARK)-gem5-accel

